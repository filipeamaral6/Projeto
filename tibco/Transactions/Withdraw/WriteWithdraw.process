<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://xmlns.example.com/1564671163059" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/schemas/Bankrising/Schemas/Transaction.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/schemas/Bankrising/Schemas/Withdraw.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <wsdl:import namespace="http://xmlns.example.com/1564671163059" location="/Transactions/WSDL.wsdl"/>
    <pd:name>Transactions/Withdraw/WriteWithdraw.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:WriteWithdrawInput"/>
    <pd:startX>77</pd:startX>
    <pd:startY>356</pd:startY>
    <pd:returnBindings>
        <pfx:WriteWithdrawOutput>
            <output>
                <ns1:outputWithdraw>
                    <xsl:attribute name="message">
                        <xsl:value-of select="$message/root/message"/>
                    </xsl:attribute>
                </ns1:outputWithdraw>
            </output>
        </pfx:WriteWithdrawOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:WriteWithdrawOutput"/>
    <pd:endX>886</pd:endX>
    <pd:endY>320</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <message>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="message" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </message>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1564677811027</pd:targetNamespace>
    <pd:activity name="Query_IBAN_EXISTS">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>298</pd:x>
        <pd:y>357</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM account WHERE iban=?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>iban</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>type</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>iban</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>account_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>BIGINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>balance</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>8</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DOUBLE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>interest</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>8</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DOUBLE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>created_at</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DATE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>employee_id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <iban>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_iban)">
                            <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_iban"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </iban>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Query_account_id_EXISTS">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>307</pd:x>
        <pd:y>244</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>SELECT * FROM account WHERE id=?</statement>
            <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>id</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>type</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>iban</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>account_number</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>BIGINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>balance</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>8</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DOUBLE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>interest</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>8</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DOUBLE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>created_at</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DATE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>employee_id</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <id>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id)">
                            <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </id>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="IBAN_NOTEXISTS">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>601</pd:x>
        <pd:y>387</pd:y>
        <config>
            <variableName>message</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <message>
                    <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="&quot;Conta não encontrada!&quot;"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ID_NOTEXISTS">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>597</pd:x>
        <pd:y>286</pd:y>
        <config>
            <variableName>message</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <message>
                    <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="&quot;Conta não encontrada!&quot;"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.TransactionGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>380</pd:x>
        <pd:y>1</pd:y>
        <pd:width>775</pd:width>
        <pd:height>206</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>transactionGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:transactionType>JDBCTransaction</pd:transactionType>
            <pd:includeCheckpoint>false</pd:includeCheckpoint>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetAccountBalance</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>NOMONEY</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SUCCESS</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>WriteTransaction</pd:from>
            <pd:to>LAST_INSERT_ID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LAST_INSERT_ID</pd:from>
            <pd:to>WriteWithdraw</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>UPDATE_ACCOUNT</pd:from>
            <pd:to>WriteTransaction</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetAccountBalance</pd:from>
            <pd:to>UPDATE_ACCOUNT</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>($GetAccountBalance/resultSet/Record[1]/balance - $Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@value) &gt;= 0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>GetAccountBalance</pd:from>
            <pd:to>NOMONEY</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>($GetAccountBalance/resultSet/Record[1]/balance - $Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@value) &lt; 0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>WriteWithdraw</pd:from>
            <pd:to>SUCCESS</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="WriteTransaction">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>641</pd:x>
            <pd:y>151</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>INSERT INTO transaction (account_id, value, account_iban, user_id, type, description) VALUES (?,?,?,?,?,?) </statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>account_id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>value</parameterName>
                        <dataType>DOUBLE</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>account_iban</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>user_id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>type</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>description</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <account_id>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </account_id>
                    <value>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@value)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@value"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </value>
                    <account_iban>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_iban)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_iban"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </account_iban>
                    <user_id>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@user_id)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@user_id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </user_id>
                    <type>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@type)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@type"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </type>
                    <description>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@description)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@description"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </description>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LAST_INSERT_ID">
            <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
            <pd:x>790</pd:x>
            <pd:y>151</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <maxRows>100</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>SELECT  LAST_INSERT_ID();</statement>
                <oraObjects/>
                <oraTables/>
                <QueryOutputCachedSchemaColumns>LAST_INSERT_ID</QueryOutputCachedSchemaColumns>
                <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
                <QueryOutputCachedSchemaDataTypesName>BIGINT UNSIGNED</QueryOutputCachedSchemaDataTypesName>
                <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            </config>
            <pd:inputBindings>
                <jdbcQueryActivityInput/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="WriteWithdraw">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>917</pd:x>
            <pd:y>150</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>INSERT INTO withdraw (transaction_id, employee_id) VALUES (?,?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>transaction_id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>employee_id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <transaction_id>
                        <xsl:choose>
                            <xsl:when test="exists($LAST_INSERT_ID/resultSet/Record[1]/LAST_INSERT_ID)">
                                <xsl:value-of select="$LAST_INSERT_ID/resultSet/Record[1]/LAST_INSERT_ID"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </transaction_id>
                    <employee_id>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@employee_id)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@employee_id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </employee_id>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SUCCESS">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>1049</pd:x>
            <pd:y>150</pd:y>
            <config>
                <variableName>message</variableName>
            </config>
            <pd:inputBindings>
                <root>
                    <message>
                        <xsl:value-of select="&quot;Levantamento executado!&quot;"/>
                    </message>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="UPDATE_ACCOUNT">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>489</pd:x>
            <pd:y>153</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>UPDATE account SET balance =(?) WHERE id=(?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>balance</parameterName>
                        <dataType>DOUBLE</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <balance>
                        <xsl:value-of select="$GetAccountBalance/resultSet/Record[1]/balance - $Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@value"/>
                    </balance>
                    <id>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </id>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetAccountBalance">
            <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
            <pd:x>488</pd:x>
            <pd:y>56</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <maxRows>100</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>SELECT balance FROM account WHERE id=?</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
                <oraObjects/>
                <oraTables/>
                <QueryOutputCachedSchemaColumns>balance</QueryOutputCachedSchemaColumns>
                <QueryOutputCachedSchemaDataTypes>8</QueryOutputCachedSchemaDataTypes>
                <QueryOutputCachedSchemaDataTypesName>DOUBLE</QueryOutputCachedSchemaDataTypesName>
                <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            </config>
            <pd:inputBindings>
                <jdbcQueryActivityInput>
                    <id>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id)">
                                <xsl:value-of select="$Start/pfx:WriteWithdrawInput/input/ns1:inputWithdraw/@account_id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </id>
                </jdbcQueryActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="NOMONEY">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>800</pd:x>
            <pd:y>56</pd:y>
            <config>
                <variableName>message</variableName>
            </config>
            <pd:inputBindings>
                <root>
                    <message>
                        <xsl:value-of select="&quot;O seu saldo não lhe permite fazer esta operação!&quot;"/>
                    </message>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1115</pd:x>
        <pd:y>320</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ERROR">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>1006</pd:x>
        <pd:y>317</pd:y>
        <config>
            <variableName>message</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <message>
                    <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="&quot;Ocorreu um erro! Verifique se introduziu bem os dados, ou tente mais tarde!&quot;"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Query_IBAN_EXISTS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_IBAN_EXISTS</pd:from>
        <pd:to>IBAN_NOTEXISTS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Query_IBAN_EXISTS/resultSet/Record))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_IBAN_EXISTS</pd:from>
        <pd:to>Query_account_id_EXISTS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Query_IBAN_EXISTS/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_account_id_EXISTS</pd:from>
        <pd:to>ID_NOTEXISTS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Query_account_id_EXISTS/resultSet/Record))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query_account_id_EXISTS</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Query_account_id_EXISTS/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ID_NOTEXISTS</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IBAN_NOTEXISTS</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ERROR</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ERROR</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>